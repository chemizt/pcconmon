name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout master
      uses: actions/checkout@v2
      
    - name: Cache submodules
      id: cache-submods
      uses: actions/cache@v2
      with:
        path: external/**
        key: ${{ runner.os }}-submods    
        
    - name: Checkout submodules if none are cached
      if: steps.cache-submods.outputs.cache-hit != 'true'
      run: git submodule update --init --recursive

    - name: Download and install Boost
      uses: MarkusJx/install-boost@v2.4.3
      with:
        boost_version: 1.81.0
        platform_version: 20.04
        toolset: gcc
    
    - name: Generate build system
      run: mkdir build && cd build && cmake ..
      
    - name: Build
      run: cd build && cmake --build .
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Linux-built testMain and Agent
        path: out/bin/release/*
  
  build-windows:
    runs-on: windows-latest
    steps:
  
    - name: Checkout master
      uses: actions/checkout@v2
      
    - name: Cache submodules
      id: cache-submods
      uses: actions/cache@v2
      with:
        path: external/**
        key: ${{ runner.os }}-submods
        
    - name: Checkout submodules if none are cached
      if: steps.cache-submods.outputs.cache-hit != 'true'
      run: git submodule update --init --recursive
      
    - name: Set up MSBuild
      uses: microsoft/setup-msbuild@v1
      
    - name: Download and install Boost
      uses: MarkusJx/install-boost@v2.4.3
      with:
        boost_version: 1.81.0
        platform_version: 2022
        toolset: msvc
      
    - name: Generate build system
      run: rm PreLoad.cmake && mkdir build && cd build && cmake -DBoost_ROOT="${env:BOOST_ROOT}" -DBoost_LIBRARIES="${env:BOOST_ROOT}\lib" ..
      
    - name: Build
      run: cd build && MSBuild pcConMon.sln /p:Configuration=Release /p:Platform=x64 /m
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Windows-built testMain and Agent
        path: out/bin/release/*.exe
